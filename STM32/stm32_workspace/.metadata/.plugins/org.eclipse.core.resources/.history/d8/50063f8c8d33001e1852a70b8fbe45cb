
#if !defined(PACKET_DATA_H)

#define PACKET_DATA_H

#include <stdbool.h>
#include <stdint.h>
#include "cmsis_os.h"
#include "pkt.h"

#define PKT_DATA_SIZE_BYTES     (PKT_SIZE_BYTES - sizeof(pkt_header_t) - sizeof(pkt_check_sum_t))

typedef struct
{
    uint8_t red             : 1;
    uint8_t dark_red        : 1;
    uint8_t maroon          : 1;
    uint8_t salmon          : 1;
    uint8_t orange_red      : 1;
    uint8_t orange          : 1;
    uint8_t gold            : 1;
    uint8_t yellow          : 1;

    uint8_t green           : 1;
    uint8_t spring_green    : 1;
    uint8_t forest_green    : 1;
    uint8_t teal            : 1;
    uint8_t cyan            : 1;
    uint8_t aqua_marine     : 1;
    uint8_t blue            : 1;
    uint8_t navy            : 1;

    uint8_t dark_blue       : 1;
    uint8_t purple          : 1;
    uint8_t violet          : 1;
    uint8_t indigo          : 1;
    uint8_t plum            : 1;
    uint8_t pink            : 1;
    uint8_t hot_pink        : 1;
    uint8_t deep_pink       : 1;

    uint8_t brown           : 1;
    uint8_t chocolate       : 1;
    uint8_t white           : 1;
    uint8_t gray            : 1;
    uint8_t silver          : 1;
    uint8_t black           : 1;
    uint8_t rsvd0           : 2;

} pkt_data_color_select_t;


typedef struct
{
    uint8_t spell           : 1;
    uint8_t fixed_color     : 1;
    uint8_t rainbow         : 1;
    uint8_t sparkle_no_fill : 1;
    uint8_t chase_rainbow   : 1;
    uint8_t chase           : 1;
    uint8_t fixed_white     : 1;
    uint8_t sparkle_fill    : 1;

    uint8_t fade            : 1;
    uint8_t twinkle         : 1;
    uint8_t rsvd0           : 6;

} pkt_data_animation_select_t;


typedef struct
{
    uint8_t brightness_100p : 1;
    uint8_t brightness_75p  : 1;
    uint8_t brightness_50p  : 1;
    uint8_t brightness_25p  : 1;
    uint8_t brightness_1p   : 1;
    uint8_t rsvd0           : 3;

} pkt_data_brightness_select_t;


typedef struct
{
    uint8_t speed_1000p     : 1;
    uint8_t speed_500p      : 1;
    uint8_t speed_100p      : 1;
    uint8_t speed_50p       : 1;
    uint8_t speed_25p       : 1;
    uint8_t rsvd0           : 3;
} pkt_data_speed_select_t;


typedef struct
{
    uint8_t num_strips;
    uint8_t rsvd0;
    uint8_t rsvd1;
    uint8_t rsvd2;

    uint16_t strip_1_length;
    uint16_t strip_2_length;
    uint16_t strip_3_length;
} pkt_data_strip_config_t;


typedef union
{
    pkt_data_color_select_t         color;
    pkt_data_animation_select_t     animation;
    pkt_data_brightness_select_t    brightness;
    pkt_data_speed_select_t         speed;
    pkt_data_strip_config_t         strip;
} pkt_data_union_t;


typedef union
{
    struct
    {
        pkt_data_union_t    data;
        uint8_t             tbd[PKT_DATA_SIZE_BYTES - \
                                sizeof(pkt_data_t)];
    };
    uint8_t flat_data_uint8_t[PKT_DATA_SIZE_BYTES / \
                              sizeof(uint8_t)];
    uint16_t flat_data_uint16_t[PKT_DATA_SIZE_BYTES / \
                                sizeof(uint16_t)];
    uint32_t flat_data_uint32_t[PKT_DATA_SIZE_BYTES / \
                                sizeof(uint32_t)];
} pkt_data_t;




#endif
