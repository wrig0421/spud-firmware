// SRW

#if !defined(GPIO_CONFIG_H)
#define GPIO_CONFIG_H

#include <stdint.h>
#include <stdbool.h>
#include "stm32l4xx_hal.h"


typedef enum
{
    GPIO_CONFIG_PIN_FIRST,
    GPIO_CONFIG_PIOA_PIN0 = GPIO_CONFIG_PIN_FIRST,
    GPIO_CONFIG_PIOA_PIN1,
    GPIO_CONFIG_PIOA_PIN2,
    GPIO_CONFIG_PIOA_PIN3,
    GPIO_CONFIG_PIOA_PIN4,
    GPIO_CONFIG_PIOA_PIN5,
    GPIO_CONFIG_PIOA_PIN6,
    GPIO_CONFIG_PIOA_PIN7,
    GPIO_CONFIG_PIOA_PIN8,
    GPIO_CONFIG_PIOA_PIN9,
    GPIO_CONFIG_PIOA_PIN10,
    GPIO_CONFIG_PIOA_PIN11,
    GPIO_CONFIG_PIOA_PIN12,
    GPIO_CONFIG_PIOA_PIN13,
    GPIO_CONFIG_PIOA_PIN14,
    GPIO_CONFIG_PIOA_PIN15,
    GPIO_CONFIG_PIOB_PIN0,
    GPIO_CONFIG_PIOB_PIN1,
    GPIO_CONFIG_PIOB_PIN2,
    GPIO_CONFIG_PIOB_PIN3,
    GPIO_CONFIG_PIOB_PIN4,
    GPIO_CONFIG_PIOB_PIN5,
    GPIO_CONFIG_PIOB_PIN6,
    GPIO_CONFIG_PIOB_PIN7,
    GPIO_CONFIG_PIOB_PIN8,
    GPIO_CONFIG_PIOB_PIN9,
    GPIO_CONFIG_PIOB_PIN10,
    GPIO_CONFIG_PIOB_PIN11,
    GPIO_CONFIG_PIOB_PIN12,
    GPIO_CONFIG_PIOB_PIN13,
    GPIO_CONFIG_PIOB_PIN14,
    GPIO_CONFIG_PIOB_PIN15,
    GPIO_CONFIG_PIOC_PIN0,
    GPIO_CONFIG_PIOC_PIN1,
    GPIO_CONFIG_PIOC_PIN2,
    GPIO_CONFIG_PIOC_PIN3,
    GPIO_CONFIG_PIOC_PIN4,
    GPIO_CONFIG_PIOC_PIN5,
    GPIO_CONFIG_PIOC_PIN6,
    GPIO_CONFIG_PIOC_PIN7,
    GPIO_CONFIG_PIOC_PIN8,
    GPIO_CONFIG_PIOC_PIN9,
    GPIO_CONFIG_PIOC_PIN10,
    GPIO_CONFIG_PIOC_PIN11,
    GPIO_CONFIG_PIOC_PIN12,
    GPIO_CONFIG_PIOD_PIN2,
    GPIO_CONFIG_PIOH_PIN3,
    GPIO_CONFIG_NUM_PINS
} gpio_config_pin_e;


typedef enum
{
    GPIO_CONFIG_PIN_MODE_NO_SETUP,
    GPIO_CONFIG_PIN_MODE_OUTPUT_PUSH_PULL,
    GPIO_CONFIG_PIN_MODE_OUTPUT_OPEN_DRAIN,
    GPIO_CONFIG_PIN_MODE_INPUT_FLOAT,
    GPIO_CONFIG_PIN_MODE_INPUT_PULLUP,
    GPIO_CONFIG_PIN_MODE_INPUT_PULLDOWN,
    GPIO_CONFIG_PIN_MODE_ALTERNATE_FUNCTION,
    GPIO_CONFIG_NUM_PIN_MODES
} gpio_config_pin_mode_e;


typedef enum
{
    GPIO_CONFIG_PIN_INTERRUPT_NO_SETUP,
    GPIO_CONFIG_PIN_INTERRUPT_ENABLE,
    GPIO_CONFIG_PIN_INTERRUPT_DISABLE
} gpio_config_pin_interrupt_e;


typedef enum
{
    GPIO_CONFIG_OUTPUT_LVL_NONE,
    GPIO_CONFIG_OUTPUT_LVL_LOW,
    GPIO_CONFIG_OUTPUT_LVL_HIGH
} gpio_config_output_lvl_e;

typedef struct
{
    uint16_t                        pin;
    GPIO_TypeDef *                  port;
    gpio_config_pin_mode_e          pin_mode;
    gpio_config_pin_interrupt_e     interrupt;
    gpio_config_output_lvl_e        output_lvl;
} gpio_config_t;


#endif
