// Spud 2021

#if !defined(ANIMATE_LED_H)

#define ANIMATE_LED_H
#include <stdint.h>
#include <stdbool.h> 
#include "board_init_common.h"
#include "ws2812b.h"
//#include "color_led.h"

// typedefs, structs, enums
typedef enum
{
    ISR_SPEED = 0,
    ISR_STATE,
    ISR_COLOR,
    ISR_PAUSE,
    NUM_ISR
} isr_e;


typedef enum
{
    MASTER_LED_STATE_DEMO,
    MASTER_LED_STATE_FIXED
} master_led_state_e;

typedef enum
{
	LED_STATE_FIRST = 0,
	LED_STATE_SPELL = LED_STATE_FIRST,
	LED_STATE_WHITE_COLOR,
	LED_STATE_SOLID_COLOR,
	LED_STATE_SPARKLE_NO_FILL,
    LED_STATE_SPARKLE_FILL,
    LED_STATE_RAINBOW_CYCLE,
    LED_STATE_THEATER_CHASE,
    LED_STATE_THEATER_CHASE_RAINBOW,
    LED_STATE_FADE_IN_AND_OUT,
    LED_STATE_TWINKLE,
#if defined(SRW_DEBUG)
    LED_STATE_SRW_DEBUG,
#endif
#if defined(MULTIPLE_STRIPS)
	LED_STATE_FADE_IN_AND_OUT_MULTIPLE_COLORS,
	LED_STATE_MULTIPLE_COLORS,
	LED_STATE_RAINBOW_CYCLE_TWO_TONE,
	LED_STATE_THEATER_CHASE_MULTIPLE_COLORS,
	LED_STATE_TWINKLE_MULTIPLE_COLORS,
	LED_STATE_SPELL_MULTIPLE_COLORS,
	LED_STATE_SPELL_SOLID_RANDOM_COLOR,
	LED_STATE_SPELL_SPARKLE_FILL,
	LED_STATE_SPELL_SPARKLE_NO_FILL,
	LED_STATE_LAST = LED_STATE_SPELL_SPARKLE_NO_FILL,
#elif defined(SRW_DEBUG)
	LED_STATE_LAST = LED_STATE_SRW_DEBUG,
#else
	LED_STATE_LAST = LED_STATE_SPELL,
#endif
	NUM_LED_STATES,
	// future states below 
	//LED_STATE_FADE_IN_AND_OUT_RANDOM,
    //LED_STATE_METEOR,
    //LED_STATE_STROBE,
    //LED_STATE_SPELL_SOLID_WHITE_COLOR,
    //LED_STATE_KITT,
    //LED_STATE_CYCLONE_BOUNCE,
    //LED_STATE_RANDOM,
    //LED_STATE_RUNNING_LIGHTS,
    //LED_STATE_FIRE,
    //LED_STATE_BOUNCING_BALLS,
    //LED_STATE_BOUNCING_BALLS_RANDOM,
} led_state_e;


typedef enum
{
	LED_SPEED_FIRST,
	LED_SPEED_10X = LED_SPEED_FIRST,
	LED_SPEED_5X,
	LED_SPEED_2X,
	LED_SPEED_1X,
	LED_SPEED_0P5X,
	LED_SPEED_0P25X,
	//LED_SPEED_0P1X,
	LED_SPEED_LAST = LED_SPEED_0P25X,
	NUM_SPEEDS
} led_speed_e;

void animate_led_show_strip(const strip_mask_t strip_mask);
void animate_led_solid_custom_color(const strip_mask_t strip_mask, color_hex_code_e color);
void animate_led_turn_all_pixels_off(void);
void animate_led_spell_word_multiple_colors(strip_mask_t strip_mask, uint32_t* color_array, uint16_t speed_delay);
void animate_led_spell_and_sparkle(const strip_mask_t spell_mask, const strip_mask_t sparkle_mask, color_hex_code_e color, bool fill, uint16_t speed_delay);
void animate_led_only_spell_word(strip_mask_t strip_mask, color_hex_code_e color, uint16_t speed_delay);void animate_led_fade_in_fade_out(strip_mask_t strip_mask, color_hex_code_e color);
void animate_led_strobe(strip_mask_t strip_mask, color_hex_code_e color, uint16_t animate_led_strobe_count, uint16_t flash_delay, uint16_t end_pause);
void animate_led_cyclone_bounce(strip_mask_t strip_mask, color_hex_code_e color, uint16_t eye_size, uint16_t speed_delay, uint16_t return_delay);
void animate_led_center_to_outside(strip_mask_t strip_mask, color_hex_code_e color, uint16_t eye_size, uint16_t speed_delay, uint16_t return_delay);
void animate_led_outside_to_center(strip_mask_t strip_mask, color_hex_code_e color, uint16_t eye_size, uint16_t speed_delay, uint16_t return_delay);
void animate_led_left_to_right(strip_mask_t strip_mask, color_hex_code_e color, uint16_t eye_size, uint16_t speed_delay, uint16_t return_delay);
void animate_led_right_to_left(strip_mask_t strip_mask, color_hex_code_e color, uint16_t eye_size, uint16_t speed_delay, uint16_t return_delay);
void animate_led_new_kitt(uint16_t eye_size, uint16_t speed_delay, uint16_t return_delay);
void animate_led_twinkle(strip_mask_t strip_mask, color_hex_code_e color, uint16_t count, uint16_t speed_delay, bool only_one);
void animate_led_twinkle_random(strip_mask_t strip_mask, uint16_t count, uint16_t speed_delay, bool only_one);
void animate_led_sparkle_only_random_color(strip_mask_t strip_mask, bool fill, uint16_t speed_delay);
void animate_led_sparkle_random_color(strip_mask_t strip_mask, bool fill, uint16_t speed_delay);
void animate_led_sparkle(strip_mask_t strip_mask, color_hex_code_e color, uint16_t speed_delay);
void animate_led_running_lights(strip_mask_t strip_mask, color_hex_code_e color);
void animate_led_color_wipe(strip_mask_t strip_mask, color_hex_code_e color, uint16_t speed_delay);
void animate_led_rainbow_cycle(strip_mask_t strip_mask, uint16_t speed_delay);
uint8_t* animate_led_wheel(uint8_t wheel_pos);
void animate_led_theater_chase(strip_mask_t strip_mask, color_hex_code_e color, uint16_t speed_delay);
void animate_led_theater_chase_rainbow(strip_mask_t strip_mask, uint16_t speed_delay);
void animate_led_bouncing_balls(strip_mask_t strip_mask, color_hex_code_e color, int ball_count);
void animate_led_meteor_rain(strip_mask_t strip_mask, color_hex_code_e color, uint8_t meteor_size, uint8_t meteor_trail_decay, bool meteor_random_decay, int speed_delay);
void animate_led_fade_to_black(strip_mask_t strip_mask, uint16_t pixel, uint8_t fade_value);
void animate_led_set_pixel(strip_mask_t strip_mask, uint16_t pixel, uint8_t red, uint8_t green, uint8_t blue);
void animate_led_spell_and_solid_color(const strip_mask_t spell_mask, const strip_mask_t solid_color_mask, color_hex_code_e color, uint16_t speed_delay);
void animate_led_set_all_pixels(strip_mask_t strip_mask, uint8_t red, uint8_t green, uint8_t blue);
void animate_led_fade_in_fade_out_multiple_colors(strip_mask_t strip_mask, uint32_t* color_array);
void animate_led_theater_chase_multiple_colors(strip_mask_t strip_mask, uint32_t* color, uint16_t speed_delay);
void animate_led_multiple_solid_custom_colors(strip_mask_t strip_mask, uint32_t* color_array);
void animate_led_twinkle_multiple_colors(strip_mask_t strip_mask, uint32_t* color_array, uint16_t count, uint16_t speed_delay, bool only_one);


#endif
