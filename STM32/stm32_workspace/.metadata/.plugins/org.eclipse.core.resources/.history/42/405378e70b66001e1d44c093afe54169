// SRW

#include "stm32l4xx_hal.h"
#include "board_common.h"
#include "board_specific.h"
#include "gpio_config_hal.h"

#if defined(BOARD_SPUD_GLO_V5)







gpio_config_t gpio_config[GPIO_CONFIG_NUM_PINS] =
{
    [GPIO_CONFIG_PIOA_PIN0] =
    {
        .pin = PIN_WKUP1,
        .port = PIN_PORT_A,
        .pin_mode = GPIO_CONFIG_PIN_MODE_INPUT_FLOAT
        .interrupt = GPIO_CONFIG_PIN_INTERRUPT_ENABLE,
        .output_lvl = GPIO_CONFIG_OUTPUT_LVL_NONE
    },
    [GPIO_CONFIG_PIOA_PIN1] =
    {
        .pin = PIN_ESP8266_SCK,
        .port = PIN_PORT_A,
        .pin_mode = GPIO_CONFIG_PIN_MODE_ALTERNATE_FUNCTION
        .interrupt = GPIO_CONFIG_PIN_INTERRUPT_NO_SETUP,
        .output_lvl = GPIO_CONFIG_OUTPUT_LVL_NONE
    },
    [GPIO_CONFIG_PIOA_PIN2] =
    {
        .pin = PIN_WKUP4,
        .port = PIN_PORT_A,
        .pin_mode = GPIO_CONFIG_PIN_MODE_INPUT_FLOAT
        .interrupt = GPIO_CONFIG_PIN_INTERRUPT_ENABLE,
        .output_lvl = GPIO_CONFIG_OUTPUT_LVL_NONE
    },
    [GPIO_CONFIG_PIOA_PIN3] =
    {
        .pin = PIOA_PIN_3,
        .pin_mode = GPIO_CONFIG_PIN_MODE_INPUT_PULLDOWN
    },
    [GPIO_CONFIG_PIOA_PIN4] =
    {
        .pin = PIN_ESP8266_CSN,
        .port = PIN_PORT_A,
        .pin_mode = GPIO_CONFIG_PIN_MODE_OUTPUT_PUSH_PULL
        .interrupt = GPIO_CONFIG_PIN_INTERRUPT_NO_SETUP,
        .output_lvl = GPIO_CONFIG_OUTPUT_LVL_HIGH
    },
    [GPIO_CONFIG_PIOA_PIN5] =
    {
        .pin = PIN_ESP8266_GPIO0,
        .port = PIN_PORT_A,
        .pin_mode = GPIO_CONFIG_PIN_MODE_OUTPUT_PUSH_PULL
        .interrupt = GPIO_CONFIG_PIN_INTERRUPT_NO_SETUP,
        .output_lvl = GPIO_CONFIG_OUTPUT_LVL_NONE
    },
    [GPIO_CONFIG_PIOA_PIN6] =
    {
        .pin = PIN_ESP8266_EN,
        .port = PIN_PORT_A,
        .pin_mode = GPIO_CONFIG_PIN_MODE_OUTPUT_PUSH_PULL
        .interrupt = GPIO_CONFIG_PIN_INTERRUPT_NO_SETUP,
        .output_lvl = GPIO_CONFIG_OUTPUT_LVL_HIGH
    },
    [GPIO_CONFIG_PIOA_PIN7] =
    {
        .pin = PIN_ESP8266_RST,
        .port = PIN_PORT_A,
        .pin_mode = GPIO_CONFIG_PIN_MODE_OUTPUT_PUSH_PULL
        .interrupt = GPIO_CONFIG_PIN_INTERRUPT_NO_SETUP,
        .output_lvl = GPIO_CONFIG_OUTPUT_LVL_HIGH
    },
    [GPIO_CONFIG_PIOA_PIN8] =
    {
        .pin = PIN_TIM1_CH1,
        .port = PIN_PORT_A,
        .pin_mode = GPIO_CONFIG_PIN_MODE_ALTERNATE_FUNCTION
        .interrupt = GPIO_CONFIG_PIN_INTERRUPT_NO_SETUP,
        .output_lvl = GPIO_CONFIG_OUTPUT_LVL_NONE
    },
    [GPIO_CONFIG_PIOA_PIN9] =
    {
        .pin = PIN_TIM1_CH2,
        .port = PIN_PORT_A,
        .pin_mode = GPIO_CONFIG_PIN_MODE_ALTERNATE_FUNCTION
        .interrupt = GPIO_CONFIG_PIN_INTERRUPT_NO_SETUP,
        .output_lvl = GPIO_CONFIG_OUTPUT_LVL_NONE
    },
    [GPIO_CONFIG_PIOA_PIN10] =
    {
        .pin = PIN_TIM1_CH3,
        .port = PIN_PORT_A,
        .pin_mode = GPIO_CONFIG_PIN_MODE_ALTERNATE_FUNCTION
        .interrupt = GPIO_CONFIG_PIN_INTERRUPT_NO_SETUP,
        .output_lvl = GPIO_CONFIG_OUTPUT_LVL_NONE
    },
    [GPIO_CONFIG_PIOA_PIN11] =
    {
        .pin = PIN_ESP8266_CIPO,
        .port = PIN_PORT_A,
        .pin_mode = GPIO_CONFIG_PIN_MODE_ALTERNATE_FUNCTION
        .interrupt = GPIO_CONFIG_PIN_INTERRUPT_NO_SETUP,
        .output_lvl = GPIO_CONFIG_OUTPUT_LVL_NONE
    },
    [GPIO_CONFIG_PIOA_PIN12] =
    {
        .pin = PIN_ESP8266_COPI,
        .port = PIN_PORT_A,
        .pin_mode = GPIO_CONFIG_PIN_MODE_ALTERNATE_FUNCTION
        .interrupt = GPIO_CONFIG_PIN_INTERRUPT_NO_SETUP,
        .output_lvl = GPIO_CONFIG_OUTPUT_LVL_NONE
    },
    [GPIO_CONFIG_PIOA_PIN13] =
    {
        .pin = PIN_PROG_SWDIO,
        .pin_mode = GPIO_CONFIG_PIN_MODE_NO_SETUP
    },
    [GPIO_CONFIG_PIOA_PIN14] =
    {
        .pin = PIN_PROG_SWCLK,
        .pin_mode = GPIO_CONFIG_PIN_MODE_NO_SETUP
    },
    [GPIO_CONFIG_PIOA_PIN15] =
    {
        .pin = PIN_PROG_JTDI,
        .pin_mode = GPIO_CONFIG_PIN_MODE_NO_SETUP
    },
    [GPIO_CONFIG_PIOB_PIN0] =
    {
        .pin = PIOB_PIN_0,
        .pin_mode = GPIO_CONFIG_PIN_MODE_INPUT_PULLDOWN
    },
    [GPIO_CONFIG_PIOB_PIN1] =
    {
        .pin = PIOB_PIN_1,
        .pin_mode = GPIO_CONFIG_PIN_MODE_INPUT_PULLDOWN
    },
    [GPIO_CONFIG_PIOB_PIN2] =
    {
        .pin = PIOB_PIN_2,
        .pin_mode = GPIO_CONFIG_PIN_MODE_INPUT_PULLDOWN
    },
    [GPIO_CONFIG_PIOB_PIN3] =
    {
        .pin = PIN_PROG_SWCLK,
        .pin_mode = GPIO_CONFIG_PIN_MODE_NO_SETUP
    },
    [GPIO_CONFIG_PIOB_PIN4] =
    {
        .pin = PIN_PROG_JTDI,
        .pin_mode = GPIO_CONFIG_PIN_MODE_NO_SETUP
    },
    [GPIO_CONFIG_PIOB_PIN5] =
    {
        .pin = PIOB_PIN_5,
        .pin_mode = GPIO_CONFIG_PIN_MODE_INPUT_PULLDOWN
    },
    [GPIO_CONFIG_PIOB_PIN6] =
    {
        .pin = PIN_ESP8266_RXD,
        .port = PIN_PORT_B,
        .pin_mode = GPIO_CONFIG_PIN_MODE_ALTERNATE_FUNCTION
        .interrupt = GPIO_CONFIG_PIN_INTERRUPT_NO_SETUP,
        .output_lvl = GPIO_CONFIG_OUTPUT_LVL_NONE
    },
    [GPIO_CONFIG_PIOB_PIN7] =
    {
        .pin = PIN_ESP8266_TXD,
        .port = PIN_PORT_B,
        .pin_mode = GPIO_CONFIG_PIN_MODE_ALTERNATE_FUNCTION
        .interrupt = GPIO_CONFIG_PIN_INTERRUPT_NO_SETUP,
        .output_lvl = GPIO_CONFIG_OUTPUT_LVL_NONE
    },
    [GPIO_CONFIG_PIOB_PIN8] =
    {
        .pin = PIOB_PIN_8,
        .pin_mode = GPIO_CONFIG_PIN_MODE_INPUT_PULLDOWN
    },
    [GPIO_CONFIG_PIOB_PIN9] =
    {
        .pin = PIOB_PIN_9,
        .pin_mode = GPIO_CONFIG_PIN_MODE_INPUT_PULLDOWN
    },
    [GPIO_CONFIG_PIOB_PIN10] =
    {
        .pin = PIOB_PIN_10,
        .pin_mode = GPIO_CONFIG_PIN_MODE_INPUT_PULLDOWN
    },
    [GPIO_CONFIG_PIOB_PIN11] =
    {
        .pin = PIOB_PIN_11,
        .pin_mode = GPIO_CONFIG_PIN_MODE_INPUT_PULLDOWN
    },
    [GPIO_CONFIG_PIOB_PIN12] =
    {
        .pin = PIN_XR_GPIO,
        .port = PIN_PORT_B,
        .pin_mode = GPIO_CONFIG_PIN_MODE_INPUT
        .interrupt = GPIO_CONFIG_PIN_INTERRUPT_NO_SETUP,
        .output_lvl = GPIO_CONFIG_OUTPUT_LVL_NONE
    },
    [GPIO_CONFIG_PIOB_PIN13] =
    {
        .pin = PIN_VBUS_PRESENT,
        .port = PIN_PORT_B,
        .pin_mode = GPIO_CONFIG_PIN_MODE_INPUT
        .interrupt = GPIO_CONFIG_PIN_INTERRUPT_NO_SETUP,
        .output_lvl = GPIO_CONFIG_OUTPUT_LVL_NONE
    },
    [GPIO_CONFIG_PIOB_PIN14] =
    {
        .pin = PIOB_PIN_14,
        .pin_mode = GPIO_CONFIG_PIN_MODE_INPUT_PULLDOWN
    },
    [GPIO_CONFIG_PIOB_PIN15] =
    {
        .pin = PIOB_PIN_15,
        .pin_mode = GPIO_CONFIG_PIN_MODE_INPUT_PULLDOWN
    },
    [GPIO_CONFIG_PIOC_PIN0] =
    {
        .pin = PIN_XR_TX,
        .port = PIN_PORT_C,
        .pin_mode = GPIO_CONFIG_PIN_MODE_ALTERNATE_FUNCTION
        .interrupt = GPIO_CONFIG_PIN_INTERRUPT_NO_SETUP,
        .output_lvl = GPIO_CONFIG_OUTPUT_LVL_NONE
    },
    [GPIO_CONFIG_PIOC_PIN1] =
    {
        .pin = PIN_XR_RX,
        .port = PIN_PORT_C,
        .pin_mode = GPIO_CONFIG_PIN_MODE_ALTERNATE_FUNCTION
        .interrupt = GPIO_CONFIG_PIN_INTERRUPT_NO_SETUP,
        .output_lvl = GPIO_CONFIG_OUTPUT_LVL_NONE
    },
    [GPIO_CONFIG_PIOC_PIN2] =
    {
        .pin = PIN_GREEN_LED,
        .port = PIN_PORT_C,
        .pin_mode = GPIO_CONFIG_PIN_MODE_OUTPUT_PUSH_PULL
        .interrupt = GPIO_CONFIG_PIN_INTERRUPT_NO_SETUP,
        .output_lvl = GPIO_CONFIG_OUTPUT_LVL_LOW
    },
    [GPIO_CONFIG_PIOC_PIN3] =
    {
        .pin = PIN_RED_LED,
        .port = PIN_PORT_C,
        .pin_mode = GPIO_CONFIG_PIN_MODE_OUTPUT_PUSH_PULL
        .interrupt = GPIO_CONFIG_PIN_INTERRUPT_NO_SETUP,
        .output_lvl = GPIO_CONFIG_OUTPUT_LVL_LOW
    },
    [GPIO_CONFIG_PIOC_PIN4] =
    {
        .pin = PIOC_PIN_4,
        .pin_mode = GPIO_CONFIG_PIN_MODE_INPUT_PULLDOWN
    },
    [GPIO_CONFIG_PIOC_PIN5] =
    {
        .pin = PIN_WKUP3,
        .port = PIN_PORT_C,
        .pin_mode = GPIO_CONFIG_PIN_MODE_INPUT_FLOAT
        .interrupt = GPIO_CONFIG_PIN_INTERRUPT_ENABLE,
        .output_lvl = GPIO_CONFIG_OUTPUT_LVL_NONE
    },
    [GPIO_CONFIG_PIOC_PIN6] =
    {
        .pin = PIOC_PIN_6,
        .pin_mode = GPIO_CONFIG_PIN_MODE_INPUT_PULLDOWN
    },
    [GPIO_CONFIG_PIOC_PIN7] =
    {
        .pin = PIN_LVL_EN,
        .port = PIN_PORT_C,
        .pin_mode = GPIO_CONFIG_PIN_MODE_OUTPUT_PUSH_PULL
        .interrupt = GPIO_CONFIG_PIN_INTERRUPT_NO_SETUP,
        .output_lvl = GPIO_CONFIG_OUTPUT_LVL_HIGH
    },
    [GPIO_CONFIG_PIOC_PIN8] =
    {
        .pin = PIN_LVL_DIR,
        .port = PIN_PORT_C,
        .pin_mode = GPIO_CONFIG_PIN_MODE_OUTPUT_PUSH_PULL
        .interrupt = GPIO_CONFIG_PIN_INTERRUPT_NO_SETUP,
        .output_lvl = GPIO_CONFIG_OUTPUT_LVL_HIGH
    },
    [GPIO_CONFIG_PIOC_PIN9] =
    {
        .pin = PIOC_PIN_9,
        .pin_mode = GPIO_CONFIG_PIN_MODE_INPUT_PULLDOWN
    },
    [GPIO_CONFIG_PIOC_PIN10] =
    {
        .pin = PIOC_PIN_10,
        .pin_mode = GPIO_CONFIG_PIN_MODE_INPUT_PULLDOWN
    },
    [GPIO_CONFIG_PIOC_PIN11] =
    {
        .pin = PIOC_PIN_11,
        .pin_mode = GPIO_CONFIG_PIN_MODE_INPUT_PULLDOWN
    },
    [GPIO_CONFIG_PIOC_PIN12] =
    {
        .pin = PIOC_PIN_12,
        .pin_mode = GPIO_CONFIG_PIN_MODE_INPUT_PULLDOWN
    },
    [GPIO_CONFIG_PIOC_PIN13] =
    {
        .pin = PIN_WKUP2,
        .port = PIN_PORT_C,
        .pin_mode = GPIO_CONFIG_PIN_MODE_INPUT_FLOAT
        .interrupt = GPIO_CONFIG_PIN_INTERRUPT_ENABLE,
        .output_lvl = GPIO_CONFIG_OUTPUT_LVL_NONE
    },
    [GPIO_CONFIG_PIOC_PIN14] =
    {
        .pin = PIOC_PIN_14,
        .pin_mode = GPIO_CONFIG_PIN_MODE_NO_SETUP
    },
    [GPIO_CONFIG_PIOC_PIN15] =
    {
        .pin = PIOC_PIN_15,
        .pin_mode = GPIO_CONFIG_PIN_MODE_NO_SETUP
    },
    [GPIO_CONFIG_PIOD_PIN2] =
    {
        .pin = PIOD_PIN_2,
        .pin_mode = GPIO_CONFIG_PIN_MODE_INPUT_PULLDOWN
    },
    [GPIO_CONFIG_PIOH_PIN0] =
    {
        .pin = PIOH_PIN_0,
        .pin_mode = GPIO_CONFIG_PIN_MODE_NO_SETUP
    },
    [GPIO_CONFIG_PIOH_PIN1] =
    {
        .pin = PIOH_PIN_1,
        .pin_mode = GPIO_CONFIG_PIN_MODE_NO_SETUP
    },
    [GPIO_CONFIG_PIOH_PIN3] =
    {
        .pin = PIOH_PIN_3,
        .pin_mode = GPIO_CONFIG_PIN_MODE_NO_SETUP
    }
};



void gpio_config_init(void)
{
    for (gpio_config_pin_e pin = GPIO_CONFIG_PIN_FIRST;
                    pin < GPIO_CONFIG_NUM_PINS;
                    pin = (gpio_config_pin_e)(pin + 1))
    {
        GPIO_PinState output_lvl = GPIO_PIN_RESET;
        GPIO_InitTypeDef GPIO_InitStruct = {0};
        GPIO_InitStruct.pin = gpio_config[pin].pin;
        switch (gpio_config[pin].pin_mode)
        {
            case GPIO_CONFIG_PIN_MODE_OUTPUT_PUSH_PULL:
                GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
                GPIO_InitStruct.Pull = GPIO_NOPULL;
            break;
            case GPIO_CONFIG_PIN_MODE_OUTPUT_OPEN_DRAIN:
                GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
                GPIO_InitStruct.Pull = GPIO_PULLUP;
            break;
            case GPIO_CONFIG_PIN_MODE_INPUT_FLOAT:
                GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
                GPIO_InitStruct.Pull = GPIO_NOPULL;
            break;
            case GPIO_CONFIG_PIN_MODE_INPUT_PULLUP:
                GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
                GPIO_InitStruct.Pull = GPIO_PULLUP;
            break;
            case GPIO_CONFIG_PIN_MODE_INPUT_PULLDOWN:
                GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
                GPIO_InitStruct.Pull = GPIO_PULLDOWN;
            break;
            case GPIO_CONFIG_PIN_MODE_ALTERNATE_FUNCTION: // fall through
            case GPIO_CONFIG_PIN_MODE_NO_SETUP: // fall through
            default:
            break;
        }
        HAL_GPIO_Init(gpio_config[pin].port, &GPIO_InitStruct);
        switch (gpio_config[pin].pin_mode)
        {
            case GPIO_CONFIG_PIN_MODE_OUTPUT_PUSH_PULL:
            case GPIO_CONFIG_PIN_MODE_OUTPUT_OPEN_DRAIN:
                output_lvl = ((gpio_config[pin].output_lvl == GPIO_CONFIG_OUTPUT_LVL_HIGH) ? GPIO_PIN_SET : GPIO_PIN_RESET);
                HAL_GPIO_WritePin(gpio_config[pin].port, gpio_config[pin].pin, output_lvl);
            break;
            default:
            break;
        }
    }
}



void board_init_specific(void)
{
    GPIO_InitTypeDef GPIO_InitStruct = {0};

    GPIO_InitStruct.Pin = PIN_INT_LVL_EN;
    GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(PIN_PORT_B, &GPIO_InitStruct);
    HAL_GPIO_WritePin(PIN_PORT_B, PIN_INT_LVL_EN, GPIO_PIN_SET);

    GPIO_InitStruct.Pin = PIN_LVL_EN;
    GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(PIN_PORT_C, &GPIO_InitStruct);
    HAL_GPIO_WritePin(PIN_PORT_C, PIN_LVL_EN, GPIO_PIN_RESET);

    GPIO_InitStruct.Pin = PIN_LVL_DIR;
    GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(PIN_PORT_C, &GPIO_InitStruct);
    HAL_GPIO_WritePin(PIN_PORT_C, PIN_LVL_DIR, GPIO_PIN_SET);

    GPIO_InitStruct.Pin = PIN_DISP_RST | PIN_DISP_DC |PIN_DISP_BACKLIGHT;
    GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(PIN_PORT_A, &GPIO_InitStruct);

    // setup XR_RX and XR_TX
    GPIO_InitStruct.Pin = PIN_XR_GPIO | PIN_VBUS_PRESENT;
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(PIN_PORT_B, &GPIO_InitStruct);

    GPIO_InitStruct.Pin = PIN_BLUE_LED | PIN_ORANGE_LED;
    GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(PIN_PORT_B, &GPIO_InitStruct);

    GPIO_InitStruct.Pin = PIN_GREEN_LED | PIN_RED_LED;
    GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(PIN_PORT_C, &GPIO_InitStruct);

    board_init_peripheral_setup();
}


void board_init_specific_green_led_on(void)
{
    HAL_GPIO_WritePin(PIN_PORT_C, PIN_GREEN_LED, GPIO_PIN_SET);
}




#endif

